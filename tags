!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/panupuro/IdeaProjects/mato/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/ce18a79c/
-main	src/mato/core.clj	/^(defn -main [] (bootstrap))$/;"	f	namespace:mato.core
0.1.0 - 2022-07-08	CHANGELOG.md	/^## 0.1.0 - 2022-07-08$/;"	s	chapter:Change Log
2BenmoNFIodoFTgYQarXLlS2g5x	.idea/workspace.xml	/^  <component name="ProjectId" id="2BenmoNFIodoFTgYQarXLlS2g5x" \/>$/;"	i
Add	.idea/workspace.xml	/^    <ConfirmationsSetting value="2" id="Add" \/>$/;"	i
Added	CHANGELOG.md	/^### Added$/;"	S	section:Change Log""0.1.0 - 2022-07-08
Change Log	CHANGELOG.md	/^# Change Log$/;"	c
Changed	CHANGELOG.md	/^### Changed$/;"	S	section:Change Log""[0.1.1] - 2022-07-08
Changed	CHANGELOG.md	/^### Changed$/;"	S	section:Change Log""[Unreleased]
Default	.idea/workspace.xml	/^    <task active="true" id="Default" summary="Default task">$/;"	i
Fixed	CHANGELOG.md	/^### Fixed$/;"	S	section:Change Log""[0.1.1] - 2022-07-08
Introduction to mato	doc/intro.md	/^# Introduction to mato$/;"	c
LOCAL−00008	.idea/workspace.xml	/^    <task id="LOCAL−00008" summary="Using has-coords-in-it? since we have it.">$/;"	i
LOCAL−00009	.idea/workspace.xml	/^    <task id="LOCAL−00009" summary="Printing out goodies in the scene.&#10;&#10;Hm. When a goo/;"	i
LOCAL−00010	.idea/workspace.xml	/^    <task id="LOCAL−00010" summary="Goodies get removed when eaten.">$/;"	i
LOCAL−00011	.idea/workspace.xml	/^    <task id="LOCAL−00011" summary="A bit of normalization">$/;"	i
LOCAL−00012	.idea/workspace.xml	/^    <task id="LOCAL−00012" summary="We can have a bag full of goodies.">$/;"	i
LOCAL−00013	.idea/workspace.xml	/^    <task id="LOCAL−00013" summary="A bit of normalization more">$/;"	i
LOCAL−00014	.idea/workspace.xml	/^    <task id="LOCAL−00014" summary="Symbols for dimensions">$/;"	i
LOCAL−00015	.idea/workspace.xml	/^    <task id="LOCAL−00015" summary="A bit of normalization">$/;"	i
LOCAL−00016	.idea/workspace.xml	/^    <task id="LOCAL−00016" summary="Boolean returning function; let's keep the convention.">$/;"	i
LOCAL−00017	.idea/workspace.xml	/^    <task id="LOCAL−00017" summary="Better naming">$/;"	i
LOCAL−00018	.idea/workspace.xml	/^    <task id="LOCAL−00018" summary="Better naming">$/;"	i
LOCAL−00019	.idea/workspace.xml	/^    <task id="LOCAL−00019" summary="A collision detected all a round the scene.">$/;"	i
LOCAL−00020	.idea/workspace.xml	/^    <task id="LOCAL−00020" summary="The first test for change-coord&#10;&#10;Just learning.">$/;"	i
LOCAL−00021	.idea/workspace.xml	/^    <task id="LOCAL−00021" summary="Another test for change-coord">$/;"	i
LOCAL−00022	.idea/workspace.xml	/^    <task id="LOCAL−00022" summary="Another test for change-coord">$/;"	i
LOCAL−00023	.idea/workspace.xml	/^    <task id="LOCAL−00023" summary="Tests for collision?">$/;"	i
LOCAL−00024	.idea/workspace.xml	/^    <task id="LOCAL−00024" summary="dep clojure-lanterna &quot;0.9.7&quot;">$/;"	i
LOCAL−00025	.idea/workspace.xml	/^    <task id="LOCAL−00025" summary="hello world with lanterna">$/;"	i
LOCAL−00026	.idea/workspace.xml	/^    <task id="LOCAL−00026" summary="a loop that quits with q character">$/;"	i
LOCAL−00027	.idea/workspace.xml	/^    <task id="LOCAL−00027" summary="pull-input takes a channel to which it puts all user input/;"	i
LOCAL−00028	.idea/workspace.xml	/^    <task id="LOCAL−00028" summary="Changed next-move (-v5) to read from a channel the next mo/;"	i
LOCAL−00029	.idea/workspace.xml	/^    <task id="LOCAL−00029" summary="Movement happens after a key press.">$/;"	i
LOCAL−00030	.idea/workspace.xml	/^    <task id="LOCAL−00030" summary="Easier bootstrap by the bootstrap fn.">$/;"	i
LOCAL−00031	.idea/workspace.xml	/^    <task id="LOCAL−00031" summary="Less visible background">$/;"	i
LOCAL−00032	.idea/workspace.xml	/^    <task id="LOCAL−00032" summary="GAME OVER">$/;"	i
LOCAL−00033	.idea/workspace.xml	/^    <task id="LOCAL−00033" summary="The initial scene is not printed.">$/;"	i
LOCAL−00034	.idea/workspace.xml	/^    <task id="LOCAL−00034" summary="Introduced functions to start and stop the usage of the sc/;"	i
LOCAL−00035	.idea/workspace.xml	/^    <task id="LOCAL−00035" summary="The worm is growing again.">$/;"	i
LOCAL−00036	.idea/workspace.xml	/^    <task id="LOCAL−00036" summary="And, goodies are eaten.">$/;"	i
LOCAL−00037	.idea/workspace.xml	/^    <task id="LOCAL−00037" summary="Removed old stuff.">$/;"	i
LOCAL−00038	.idea/workspace.xml	/^    <task id="LOCAL−00038" summary="Better naming">$/;"	i
LOCAL−00039	.idea/workspace.xml	/^    <task id="LOCAL−00039" summary="Cleaning">$/;"	i
LOCAL−00040	.idea/workspace.xml	/^    <task id="LOCAL−00040" summary="Tests for will-eat? fn.">$/;"	i
LOCAL−00041	.idea/workspace.xml	/^    <task id="LOCAL−00041" summary="Cosmetics">$/;"	i
LOCAL−00042	.idea/workspace.xml	/^    <task id="LOCAL−00042" summary="Tests for create-coord">$/;"	i
LOCAL−00043	.idea/workspace.xml	/^    <task id="LOCAL−00043" summary="Tests for move-worm">$/;"	i
LOCAL−00044	.idea/workspace.xml	/^    <task id="LOCAL−00044" summary="Tests for has-coord-in-it?">$/;"	i
LOCAL−00045	.idea/workspace.xml	/^    <task id="LOCAL−00045" summary="Tests for will-eat?">$/;"	i
LOCAL−00046	.idea/workspace.xml	/^    <task id="LOCAL−00046" summary="Removed extra code.">$/;"	i
LOCAL−00047	.idea/workspace.xml	/^    <task id="LOCAL−00047" summary="Refactored.&#10;&#10;Tests for remove-item-if">$/;"	i
LOCAL−00048	.idea/workspace.xml	/^    <task id="LOCAL−00048" summary="-main defined.">$/;"	i
LOCAL−00049	.idea/workspace.xml	/^    <task id="LOCAL−00049" summary="Configured the uberjar to work.">$/;"	i
LOCAL−00050	.idea/workspace.xml	/^    <task id="LOCAL−00050" summary="Constant movement of the worm">$/;"	i
LOCAL−00051	.idea/workspace.xml	/^    <task id="LOCAL−00051" summary="Removed prints from pull-input.">$/;"	i
LOCAL−00052	.idea/workspace.xml	/^    <task id="LOCAL−00052" summary="Help text updated.">$/;"	i
LOCAL−00053	.idea/workspace.xml	/^    <task id="LOCAL−00053" summary="Help text updated.">$/;"	i
LOCAL−00054	.idea/workspace.xml	/^    <task id="LOCAL−00054" summary="dependabot.yml should be in .github directory.">$/;"	i
LOCAL−00055	.idea/workspace.xml	/^    <task id="LOCAL−00055" summary="test.yml">$/;"	i
LOCAL−00056	.idea/workspace.xml	/^    <task id="LOCAL−00056" summary="test.yml, another try">$/;"	i
License	README.md	/^## License$/;"	s	chapter:mato
Removed	CHANGELOG.md	/^### Removed$/;"	S	section:Change Log""[0.1.1] - 2022-07-08
Update	.idea/workspace.xml	/^    <OptionsSetting value="false" id="Update" \/>$/;"	i
Usage	README.md	/^## Usage$/;"	s	chapter:mato
[0.1.1] - 2022-07-08	CHANGELOG.md	/^## [0.1.1] - 2022-07-08$/;"	s	chapter:Change Log
[Unreleased]	CHANGELOG.md	/^## [Unreleased]$/;"	s	chapter:Change Log
artifactId	target/classes/META-INF/maven/mato/mato/pom.properties	/^artifactId=mato$/;"	k
bootstrap	src/mato/core.clj	/^(defn bootstrap []$/;"	f	namespace:mato.core
change-coord	src/mato/core.clj	/^(defn change-coord [coord movement]$/;"	f	namespace:mato.core
collision?	src/mato/core.clj	/^(defn collision? [worm]$/;"	f	namespace:mato.core
create-coord	src/mato/core.clj	/^(defn create-coord [x y] {:x x :y y})$/;"	f	namespace:mato.core
engine	src/mato/core.clj	/^(defn engine [moves-channel print-f redraw-f worm goodies]$/;"	f	namespace:mato.core
ff759572-3788-48bb-96df-0e4593c1941a	.idea/workspace.xml	/^      <changelist id="ff759572-3788-48bb-96df-0e4593c1941a" name="Changes" comment="" \/>$/;"	i
ff759572-3788-48bb-96df-0e4593c1941a	.idea/workspace.xml	/^    <list default="true" id="ff759572-3788-48bb-96df-0e4593c1941a" name="Changes" comment="test./;"	i
groupId	target/classes/META-INF/maven/mato/mato/pom.properties	/^groupId=mato$/;"	k
has-coords-in-it?	src/mato/core.clj	/^(defn has-coords-in-it? [coord collection]$/;"	f	namespace:mato.core
mato	README.md	/^# mato$/;"	c
mato.core	src/mato/core.clj	/^(ns mato.core$/;"	n
mato.core-test	test/mato/core_test.clj	/^(ns mato.core-test$/;"	n
move-worm	src/mato/core.clj	/^(defn move-worm$/;"	f	namespace:mato.core
print-scene	src/mato/core.clj	/^(defn print-scene [print-f redraw-f worm goodies]$/;"	f	namespace:mato.core
pull-input	src/mato/core.clj	/^(defn pull-input [screen out-channel]$/;"	f	namespace:mato.core
remove-item-if	src/mato/core.clj	/^(defn remove-item-if [condition item collection]$/;"	f	namespace:mato.core
revision	target/classes/META-INF/maven/mato/mato/pom.properties	/^revision=80e4225754b26b9e4f35ce35c9629583b1f6cdaf$/;"	k
start-screen	src/mato/core.clj	/^(defn start-screen [screen]$/;"	f	namespace:mato.core
stop-screen	src/mato/core.clj	/^(defn stop-screen [screen]$/;"	f	namespace:mato.core
version	target/classes/META-INF/maven/mato/mato/pom.properties	/^version=0.1.0-SNAPSHOT$/;"	k
will-eat?	src/mato/core.clj	/^(defn will-eat? [worm goodies movement]$/;"	f	namespace:mato.core
